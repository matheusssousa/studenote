import React, { useState, useEffect } from "react";
import './styles.css';
import { useAuth } from "../../context/Authcontext";
import { CaretDown, House, Note, BookmarksSimple, BookBookmark, GlobeSimple, Moon, Sun } from "@phosphor-icons/react";
import { NavLink } from 'react-router-dom';
import { useTheme } from "../../hooks/useTheme";

export default function Navbar() {
    const { Logout, userData } = useAuth();
    const [openMenuUser, setOpenMenuUser] = useState(false);
    const { theme, setTheme } = useTheme();

    const menus = [
        { name: "Página Inicial", link: "/home", icon: House },
        { name: "Anotações", link: "/notas", icon: Note },
        { name: "Categorias", link: "/categorias", icon: BookmarksSimple },
        { name: "Disciplinas", link: "/disciplinas", icon: BookBookmark },
        { name: "Comunidade", link: "/comunidade", icon: GlobeSimple },
    ];

    const LogoutUser = async (event) => {
        event.preventDefault();
        try {
            await Logout();
        } catch (error) {
            console.log(error);
        }
    }

    const handleClickOutside = (event) => {
        if (event.target.closest(".container-navbar-user") === null) {
            setOpenMenuUser(false);
        }
    };

    useEffect(() => {
        document.addEventListener("click", handleClickOutside);
        return () => {
            document.removeEventListener("click", handleClickOutside);
        };
    }, []);

    return (
        <div className="container-navbar">
            <div className="logo-navbar">
                <svg width="250" height="40" viewBox="0 0 512 58" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M22.8144 57.8C18.4411 57.8 14.2544 57.1867 10.2544 55.96C6.25439 54.68 3.08105 53.0533 0.734387 51.08L4.33439 43C6.57439 44.76 9.34772 46.2267 12.6544 47.4C15.9611 48.5733 19.3477 49.16 22.8144 49.16C25.7477 49.16 28.1211 48.84 29.9344 48.2C31.7477 47.56 33.0811 46.7067 33.9344 45.64C34.7877 44.52 35.2144 43.2667 35.2144 41.88C35.2144 40.1733 34.6011 38.8133 33.3744 37.8C32.1477 36.7333 30.5477 35.9067 28.5744 35.32C26.6544 34.68 24.4944 34.0933 22.0944 33.56C19.7477 33.0267 17.3744 32.4133 14.9744 31.72C12.6277 30.9733 10.4677 30.04 8.49439 28.92C6.57439 27.7467 5.00105 26.2 3.77439 24.28C2.54772 22.36 1.93439 19.9067 1.93439 16.92C1.93439 13.88 2.73439 11.1067 4.33439 8.6C5.98772 6.04 8.46772 4.01333 11.7744 2.52C15.1344 0.97333 19.3744 0.199997 24.4944 0.199997C27.8544 0.199997 31.1877 0.626664 34.4944 1.48C37.8011 2.33333 40.6811 3.56 43.1344 5.16L39.8544 13.24C37.3477 11.7467 34.7611 10.6533 32.0944 9.96C29.4277 9.21333 26.8677 8.84 24.4144 8.84C21.5344 8.84 19.1877 9.18666 17.3744 9.88C15.6144 10.5733 14.3077 11.48 13.4544 12.6C12.6544 13.72 12.2544 15 12.2544 16.44C12.2544 18.1467 12.8411 19.5333 14.0144 20.6C15.2411 21.6133 16.8144 22.4133 18.7344 23C20.7077 23.5867 22.8944 24.1733 25.2944 24.76C27.6944 25.2933 30.0677 25.9067 32.4144 26.6C34.8144 27.2933 36.9744 28.2 38.8944 29.32C40.8677 30.44 42.4411 31.96 43.6144 33.88C44.8411 35.8 45.4544 38.2267 45.4544 41.16C45.4544 44.1467 44.6277 46.92 42.9744 49.48C41.3744 51.9867 38.8944 54.0133 35.5344 55.56C32.1744 57.0533 27.9344 57.8 22.8144 57.8ZM63.9456 57V9.8H45.3856V0.999996H92.9056V9.8H74.3456V57H63.9456ZM121.375 57.8C113.695 57.8 107.668 55.64 103.295 51.32C98.975 47 96.815 40.76 96.815 32.6V0.999996H107.215V32.2C107.215 37.96 108.442 42.1467 110.895 44.76C113.402 47.3733 116.922 48.68 121.455 48.68C125.988 48.68 129.482 47.3733 131.935 44.76C134.388 42.1467 135.615 37.96 135.615 32.2V0.999996H145.855V32.6C145.855 40.76 143.668 47 139.295 51.32C134.975 55.64 129.002 57.8 121.375 57.8ZM158.02 57V0.999996H182.5C188.58 0.999996 193.913 2.17333 198.5 4.52C203.087 6.86666 206.66 10.12 209.22 14.28C211.78 18.44 213.06 23.3467 213.06 29C213.06 34.6 211.78 39.5067 209.22 43.72C206.66 47.88 203.087 51.1333 198.5 53.48C193.913 55.8267 188.58 57 182.5 57H158.02ZM168.42 48.2H182.02C186.233 48.2 189.86 47.4 192.9 45.8C195.993 44.2 198.367 41.96 200.02 39.08C201.727 36.2 202.58 32.84 202.58 29C202.58 25.1067 201.727 21.7467 200.02 18.92C198.367 16.04 195.993 13.8 192.9 12.2C189.86 10.6 186.233 9.8 182.02 9.8H168.42V48.2ZM231.314 24.28H259.154V32.84H231.314V24.28ZM232.114 48.28H263.714V57H221.714V0.999996H262.594V9.72H232.114V48.28ZM274.508 57V0.999996H279.388L318.028 49.64H315.468V0.999996H321.308V57H316.428L277.868 8.36H280.428V57H274.508ZM356.466 57.48C352.252 57.48 348.332 56.7867 344.706 55.4C341.132 53.96 338.012 51.96 335.346 49.4C332.732 46.7867 330.679 43.7733 329.186 40.36C327.746 36.8933 327.026 33.1067 327.026 29C327.026 24.8933 327.746 21.1333 329.186 17.72C330.679 14.2533 332.732 11.24 335.346 8.68C338.012 6.06666 341.132 4.06666 344.706 2.68C348.279 1.24 352.199 0.519998 356.466 0.519998C360.679 0.519998 364.572 1.24 368.146 2.68C371.719 4.06666 374.812 6.04 377.426 8.6C380.092 11.16 382.146 14.1733 383.586 17.64C385.079 21.1067 385.826 24.8933 385.826 29C385.826 33.1067 385.079 36.8933 383.586 40.36C382.146 43.8267 380.092 46.84 377.426 49.4C374.812 51.96 371.719 53.96 368.146 55.4C364.572 56.7867 360.679 57.48 356.466 57.48ZM356.466 52.2C359.826 52.2 362.919 51.64 365.746 50.52C368.626 49.3467 371.106 47.72 373.186 45.64C375.319 43.5067 376.972 41.0533 378.146 38.28C379.319 35.4533 379.906 32.36 379.906 29C379.906 25.64 379.319 22.5733 378.146 19.8C376.972 16.9733 375.319 14.52 373.186 12.44C371.106 10.3067 368.626 8.68 365.746 7.56C362.919 6.38666 359.826 5.8 356.466 5.8C353.106 5.8 349.986 6.38666 347.106 7.56C344.226 8.68 341.719 10.3067 339.586 12.44C337.506 14.52 335.852 16.9733 334.626 19.8C333.452 22.5733 332.866 25.64 332.866 29C332.866 32.3067 333.452 35.3733 334.626 38.2C335.852 41.0267 337.506 43.5067 339.586 45.64C341.719 47.72 344.226 49.3467 347.106 50.52C349.986 51.64 353.106 52.2 356.466 52.2ZM401.594 57V6.12H381.914V0.999996H427.194V6.12H407.514V57H401.594ZM434.331 26.04H463.931V31.08H434.331V26.04ZM434.971 51.88H468.651V57H429.051V0.999996H467.451V6.12H434.971V51.88ZM490.407 57.48C486.247 57.48 482.247 56.8133 478.407 55.48C474.62 54.0933 471.687 52.3333 469.607 50.2L471.927 45.64C473.9 47.56 476.54 49.1867 479.847 50.52C483.207 51.8 486.727 52.44 490.407 52.44C493.927 52.44 496.78 52.0133 498.967 51.16C501.207 50.2533 502.834 49.0533 503.847 47.56C504.914 46.0667 505.447 44.4133 505.447 42.6C505.447 40.4133 504.807 38.6533 503.527 37.32C502.3 35.9867 500.674 34.9467 498.647 34.2C496.62 33.4 494.38 32.7067 491.927 32.12C489.474 31.5333 487.02 30.92 484.567 30.28C482.114 29.5867 479.847 28.68 477.767 27.56C475.74 26.44 474.087 24.9733 472.807 23.16C471.58 21.2933 470.967 18.8667 470.967 15.88C470.967 13.1067 471.687 10.5733 473.127 8.28C474.62 5.93333 476.887 4.06666 479.927 2.68C482.967 1.24 486.86 0.519998 491.607 0.519998C494.754 0.519998 497.874 0.973331 500.967 1.88C504.06 2.73333 506.727 3.93333 508.967 5.48L506.967 10.2C504.567 8.6 502.007 7.42667 499.287 6.68C496.62 5.93333 494.034 5.56 491.527 5.56C488.167 5.56 485.394 6.01333 483.207 6.92C481.02 7.82666 479.394 9.05333 478.327 10.6C477.314 12.0933 476.807 13.8 476.807 15.72C476.807 17.9067 477.42 19.6667 478.647 21C479.927 22.3333 481.58 23.3733 483.607 24.12C485.687 24.8667 487.954 25.5333 490.407 26.12C492.86 26.7067 495.287 27.3467 497.687 28.04C500.14 28.7333 502.38 29.64 504.407 30.76C506.487 31.8267 508.14 33.2667 509.367 35.08C510.647 36.8933 511.287 39.2667 511.287 42.2C511.287 44.92 510.54 47.4533 509.047 49.8C507.554 52.0933 505.26 53.96 502.167 55.4C499.127 56.7867 495.207 57.48 490.407 57.48Z" fill="black" />
                </svg>
            </div>
            <div className="container-links-navbar">
                {menus.map((menus, i) => (
                    <NavLink
                        key={i}
                        to={menus.link}
                        className={({ isActive, isPending }) =>
                            isPending ? "link-pending" : isActive ? "link-active" : "link-pending"
                        }
                    >
                        <div className="link-icon">{React.createElement(menus?.icon, { size: "24" })}</div>{menus.name}
                    </NavLink>
                ))}
            </div>
            <div className="container-navbar-user">
                <button className="text-sm font-semibold hover:text-cinza duration-300 px-2 py-1 flex items-center gap-1"
                    onClick={() => setOpenMenuUser(!openMenuUser)}>
                    Olá, {userData.name} <p><CaretDown size={15} className={!openMenuUser ? 'duration-300' : 'rotate-180 duration-300'} /></p>
                </button>
                <div className={!openMenuUser ? 'hidden' : 'absolute w-44 rounded-xl p-4 bg-[#F3F2F2] shadow-md text-sm font-semibold gap-2 flex flex-col'}>
                    <a className="hover:text-[#524B4B] hover:underline duration-300 w-full text-center" href="/conta">Conta</a>
                    <button onClick={LogoutUser} className="hover:text-[#524B4B] hover:underline duration-300 w-full">Sair</button>
                </div>
                <div>
                    {theme === "light" ? <Moon size={25} onClick={() => setTheme("dark")} className="buttonmoon" /> : <Sun size={25} onClick={() => setTheme("light")} className="buttonsun" />}
                </div>
            </div>
        </div>
    )
}